z = f_z(dataset$ingreso))
# Seguimos el criterio según el cual z > 4, en muestras grandes,
# es considerado un valor atípico
outliers2 <- z  %>% filter(abs(z) > 4)
# Creación de base de datos sin outliers
dataset_no <- dataset %>% filter(!ingreso %in% outliers2$x)
par(mfrow = c(1,2))
StatDA::edaplot(dataset$ingreso/1000, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(0,90000, by = 400),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(1, 20000), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (outliers)",
P.xlab="Ingreso laboral (miles $)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset$ingreso/1000), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset$ingreso/1000, na.rm = T),
sd=sd(dataset$ingreso/1000, na.rm = T)), from=0, to=90000, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset$ingreso/1000),4)),
paste0("Max. = ", round(max(dataset$ingreso/1000),4)),
paste0("Mean = ", round(mean(dataset$ingreso/1000),4)),
paste0("Median = ", round(median(dataset$ingreso/1000),4)),
paste0("Std. dev. = ", round(sd(dataset$ingreso/1000),4)),
paste0("Kurtosis = ", round(kurtosis(dataset$ingreso/1000),4)),
paste0("Skewness = ", round(skewness(dataset$ingreso/1000),4)))
legend (x= 8000, y=0.0008, bty="n", leg.txt)
StatDA::edaplot(dataset_no$ingreso/1000, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(0,90000, by = 400),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(1, 20000), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (no-outliers)",
P.xlab="Ingreso laboral (miles $)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset_no$ingreso/1000), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset_no$ingreso/1000, na.rm = T),
sd=sd(dataset_no$ingreso/1000, na.rm = T)), from=0, to=90000, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset_no$ingreso/1000),4)),
paste0("Max. = ", round(max(dataset_no$ingreso/1000),4)),
paste0("Mean = ", round(mean(dataset_no$ingreso/1000),4)),
paste0("Median = ", round(median(dataset_no$ingreso/1000),4)),
paste0("Std. dev. = ", round(sd(dataset_no$ingreso/1000),4)),
paste0("Kurtosis = ", round(kurtosis(dataset_no$ingreso/1000),4)),
paste0("Skewness = ", round(skewness(dataset_no$ingreso/1000),4)))
legend (x=8000, y=0.0008, bty="n", leg.txt)
StatDA::edaplot(dataset$ingreso/1000, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(0,90000, by = 400),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(1, 20000), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (outliers)",
P.xlab="Ingreso laboral (miles $)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
# Eliminar valores NA
# El tratamiento de los valores NA y su estudio
# corresponden al tercer módulo del curso
dataset <- dataset %>% filter(!is.na(ingreso))
# Creación de base de datos sin outliers
dataset_no <- dataset %>% filter(!ingreso %in% outliers2$x)
par(mfrow = c(1,2))
StatDA::edaplot(dataset$ingreso/1000, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(0,90000, by = 400),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(1, 20000), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (outliers)",
P.xlab="Ingreso laboral (miles $)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset$ingreso/1000), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset$ingreso/1000, na.rm = T),
sd=sd(dataset$ingreso/1000, na.rm = T)), from=0, to=90000, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset$ingreso/1000),4)),
paste0("Max. = ", round(max(dataset$ingreso/1000),4)),
paste0("Mean = ", round(mean(dataset$ingreso/1000),4)),
paste0("Median = ", round(median(dataset$ingreso/1000),4)),
paste0("Std. dev. = ", round(sd(dataset$ingreso/1000),4)),
paste0("Kurtosis = ", round(kurtosis(dataset$ingreso/1000),4)),
paste0("Skewness = ", round(skewness(dataset$ingreso/1000),4)))
legend (x= 8000, y=0.0008, bty="n", leg.txt)
StatDA::edaplot(dataset_no$ingreso/1000, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(0,90000, by = 400),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(1, 20000), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (no-outliers)",
P.xlab="Ingreso laboral (miles $)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset_no$ingreso/1000), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset_no$ingreso/1000, na.rm = T),
sd=sd(dataset_no$ingreso/1000, na.rm = T)), from=0, to=90000, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset_no$ingreso/1000),4)),
paste0("Max. = ", round(max(dataset_no$ingreso/1000),4)),
paste0("Mean = ", round(mean(dataset_no$ingreso/1000),4)),
paste0("Median = ", round(median(dataset_no$ingreso/1000),4)),
paste0("Std. dev. = ", round(sd(dataset_no$ingreso/1000),4)),
paste0("Kurtosis = ", round(kurtosis(dataset_no$ingreso/1000),4)),
paste0("Skewness = ", round(skewness(dataset_no$ingreso/1000),4)))
legend (x=8000, y=0.0008, bty="n", leg.txt)
# Outliers para log(x)
z <- data.frame(x = log(dataset$ingreso),
z = f_z(log(dataset$ingreso)))
# Seguimos el criterio según el cual z > 4, en muestras grandes,
# es considerado un valor atípico
outliers3 <- z  %>% filter(abs(z) > 4)
plot(log(dataset$ingreso), type='p',
col=ifelse(log(dataset$ingreso) %in% outliers3$x, "red", "black"),
pch = ifelse(log(dataset$ingreso) %in% outliers3$x, 17, 1))
abline(h = min(outliers3$x), col="blue", lwd=3, lty=2)
# Considérese la transformación logarítmica
dataset$log_ingreso <- log(dataset$ingreso)
dataset_no <- dataset %>% filter(!log_ingreso %in% outliers3$x)
# Comparación entre ambas distribuciones
par(mfrow = c(1,2))
StatDA::edaplot(dataset$log_ingreso, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(12,20, by = 0.1),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(12, 20), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (outliers)",
P.xlab="Log Ingreso laboral", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset$log_ingreso), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset$log_ingreso, na.rm = T),
sd=sd(dataset$log_ingreso, na.rm = T)), from=12, to=20, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset$log_ingreso),4)),
paste0("Max. = ", round(max(dataset$log_ingreso),4)),
paste0("Mean = ", round(mean(dataset$log_ingreso),4)),
paste0("Median = ", round(median(dataset$log_ingreso),4)),
paste0("Std. dev. = ", round(sd(dataset$log_ingreso),4)),
paste0("Kurtosis = ", round(kurtosis(dataset$log_ingreso),4)),
paste0("Skewness = ", round(skewness(dataset$log_ingreso),4)))
legend (x= 15, y=2, bty="n", leg.txt)
StatDA::edaplot(dataset_no$log_ingreso, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(12,18, by = 0.1),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(12, 18), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (no-outliers)",
P.xlab="Log Ingreso laboral", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(dataset_no$log_ingreso), lwd=2, col='blue')
curve(dnorm(x, mean=mean(dataset_no$log_ingreso, na.rm = T),
sd=sd(dataset_no$log_ingreso, na.rm = T)), from=12, to=18, add=T,
col='red', lwd=3)
leg.txt <- c(paste0("Min. = ", round(min(dataset_no$log_ingreso),4)),
paste0("Max. = ", round(max(dataset_no$log_ingreso),4)),
paste0("Mean = ", round(mean(dataset_no$log_ingreso),4)),
paste0("Median = ", round(median(dataset_no$log_ingreso),4)),
paste0("Std. dev. = ", round(sd(dataset_no$log_ingreso),4)),
paste0("Kurtosis = ", round(kurtosis(dataset_no$log_ingreso),4)),
paste0("Skewness = ", round(skewness(dataset_no$log_ingreso),4)))
legend (x= 15, y=2, bty="n", leg.txt)
saveRDS(count_prop, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
dic_var <- c("id", "sexo","estable", "arl", "caja", "mas_h")
# Para examinar la distribución de una variable categórica, nos interesa su frecuencia
ds_dic <- dataset[dic_var]
# La misma información se puede obtener con la función dplyr::count()
sexo = ds_dic %>% dplyr::count(sexo) %>%
mutate(perc = prop.table(n)*100) %>% mutate(variable = "sexo")
colnames(sexo) = c("categories", "n", "perc", "variable")
estable = ds_dic %>% dplyr::count(estable) %>%
mutate(perc = prop.table(n)*100) %>% mutate(variable = "estable")
colnames(estable) = c("categories", "n", "perc", "variable")
arl = ds_dic %>% dplyr::count(arl) %>%
mutate(perc = prop.table(n)*100) %>% mutate(variable = "arl")
colnames(arl) = c("categories", "n", "perc", "variable")
caja = ds_dic %>% dplyr::count(caja) %>%
mutate(perc = prop.table(n)*100) %>% mutate(variable = "caja")
colnames(caja) = c("categories", "n", "perc", "variable")
mas_h = ds_dic %>% dplyr::count(mas_h) %>%
mutate(perc = prop.table(n)*100) %>% mutate(variable = "mas_h")
colnames(mas_h) = c("categories", "n", "perc", "variable")
plot_dic <- rbind(estable, arl, caja, mas_h)
figure_2 <- ggplot(plot_dic, aes(x = " ", n,
fill = categories)) +
geom_bar(stat = "identity", width = 1) + coord_polar("y", start=0) +
facet_wrap(~variable, scales="free", ncol = 2,
labeller = labeller(variable = c(`arl` = "Afiliación a ARL",
`caja` = "Afiliación a caja de compensación",
`estable` = "Considera su empleo estable",
`mas_h` = "Quiere trabajar más horas"))) +
labs(title = " ",
x = "Categorías", y = " ") +
scale_x_discrete(label = function(x) stringr::str_trunc(x, 15)) +
theme(axis.text.x = element_text(angle=50, hjust=1)) +
geom_label(aes(label = paste0(categories, ": ",round(perc,2), "%")),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + guides(fill="none",
col = "none") + theme_void()
sex_figure <- ggplot(sexo, aes(x = " ", n,
fill = categories)) +
geom_bar(stat = "identity", width = 1) + coord_polar("y", start=0) +
facet_wrap(~variable, scales="free", ncol = 3,
labeller = labeller(variable = c(`sexo` = "Sexo al nacer"))) +
labs(title = " ",
x = "Categorías", y = " ") +
scale_x_discrete(label = function(x) stringr::str_trunc(x, 15)) +
theme(axis.text.x = element_text(angle=50, hjust=1)) +
geom_label(aes(label = paste0(categories, ": ",round(perc,2), "%")),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + guides(fill="none",
col = "none") + theme_void()
plot_dic2 <- ggarrange(sex_figure, figure_2, ncol = 2, nrow = 1)
library(ggpubr)
plot_dic2 <- ggarrange(sex_figure, figure_2, ncol = 2, nrow = 1)
saveRDS(plot_dic2, "Módulos/Módulo 2/Figuras/plot_dic.rds")
saveRDS(plot_dic2, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_dic.rds")
knitr::opts_chunk$set(echo = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
paste0("\n \\", "tiny","\n\n", x, "\n\n \\normalsize")
})
plot_dic <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_dic.rds")
plot_dic <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_dic.rds")
plot_dic
dataset <- readxl::read_excel("geih_dataset.xlsx")
dataset <- readxl::read_excel("geih_dataset.xlsx")
ggplot(data = dataset) +
geom_histogram(mapping = aes(x = ingreso/1000, col = ingreso),
fill = "lightskyblue", col = "black",
binwidth = 400) + xlim(c(0, 15000))  + theme_bw()
dataset <- readxl::read_excel("geih_dataset.xlsx")
ggplot(data = dataset) +
geom_histogram(mapping = aes(x = ingreso/1000, col = ingreso),
fill = "lightskyblue", col = "black",
binwidth = 400) + xlim(c(0, 15000))  + theme_bw()
count = dataset %>% dplyr::count(cut_width(ingreso/1000, 1000, boundary = 0, dig.lab = 6),
name = "n") %>% t()
colnames(count) = count[1,]
count2 = as.data.frame(count[2,1:8]) %>% t()
kable(count2, col.names = NA, row.names = F, format = "latex", booktabs = T)
hist_ds <- dataset[c("id", "edad",
"horas_semana", "t_actual",
"t_viaje")]
hist_melt <- melt(hist_ds)
saveRDS(general_count_prop, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
saveRDS(general_count_prop, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
saveRDS(general_count_prop, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat2.rds")
saveRDS(general_count_prop, "C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/Curso_EDA_2024/Módulos/Módulo 1/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/Figuras/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/plot_cat.rds")
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/FIGURAS_M2/plot_cat.rds")
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
paste0("\n \\", "tiny","\n\n", x, "\n\n \\normalsize")
})
count_prop <- tibble(readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/count_prop.rds"))
count_prop <- count_prop %>% dplyr::filter(!is.na(value))
count_prop <- count_prop %>% dplyr::filter(name %in% c("actividad",
"edu",
"cotiza_fondo"))
count_prop$name <-  revalue(factor(count_prop$name),
c("actividad"="Actividad económica", "edu" = "Educación",
"cotiza_fondo" = "Fondo de pensiones"))
#count_prop$value = substr(count_prop$value, 1, 35)
count_prop$Share = round(count_prop$Share, 2)
kable(count_prop[,2:ncol(count_prop)], format = "latex", booktabs = T,
col.names = c(" ", "N", "Proporción (%)")) %>%
pack_rows(index = table(count_prop$name))
count_prop
saveRDS(general_count_prop,
"C:/Users/Portatil/Desktop/FIGURAS_M2/count_prop.rds")
figure_1 <- ggplot(plot_cat, aes(reorder(categories, -n), perc,
fill = variable, col = variable)) +
geom_bar(stat = "identity") +
facet_wrap(~variable, scales="free", ncol = 4,
labeller = labeller(variable = c(`actividad` = "Actividad económica",
`cotiza_fondo` = "Fondo de pensiones",
`edu` = "Nivel de educación",
`lugar` = "Lugar de trabajo",
`medio` = "Medio de transporte",
`parent` = "Parentesco con jefe de hogar",
`posic` = "Posición laboral",
`sintrab` = "Alternativa de recursos"))) +
labs(title = "Resumen de variables categóricas",
x = "Categorías", y = " ") +
scale_x_discrete(label = function(x) stringr::str_trunc(x, 15)) +
theme(axis.text.x = element_text(angle=50, hjust=1)) + guides(fill="none",
col = "none")
plot_cat <- rbind(parent, edu, posic, actividad, medio, sintrab,
cotiza_fondo, lugar)
# Remover la categoría de otros
plot_cat <- plot_cat %>% filter(categories != "Other")
plot_cat
figure_1 <- ggplot(plot_cat, aes(reorder(categories, -n), perc,
fill = variable, col = variable)) +
geom_bar(stat = "identity") +
facet_wrap(~variable, scales="free", ncol = 4,
labeller = labeller(variable = c(`actividad` = "Actividad económica",
`cotiza_fondo` = "Fondo de pensiones",
`edu` = "Nivel de educación",
`lugar` = "Lugar de trabajo",
`medio` = "Medio de transporte",
`parent` = "Parentesco con jefe de hogar",
`posic` = "Posición laboral",
`sintrab` = "Alternativa de recursos"))) +
labs(title = "Resumen de variables categóricas",
x = "Categorías", y = " ") +
scale_x_discrete(label = function(x) stringr::str_trunc(x, 15)) +
theme(axis.text.x = element_text(angle=50, hjust=1)) + guides(fill="none",
col = "none")
figure_1
saveRDS(figure_1, "C:/Users/Portatil/Desktop/FIGURAS_M2/plot_cat.rds")
# Para identificar los outliers es útil un diagrama de caja
boxplot(dataset$ingreso/1000, horizontal = T)
# El mismo resultado se puede obtener manualmente
Q1 <- quantile(dataset$ingreso, .25, na.rm = T)    # Cálculo de q0.25
Q3 <- quantile(dataset$ingreso, .75, na.rm = T)    # Cálculo de q0.75
IQR <- IQR(dataset$ingreso, na.rm = T)             # Cálculo del IQR (Q3-Q1)
outliers1 <- dataset %>% filter(ingreso<(Q1 - 1.5*IQR) | ingreso>(Q3 + 1.5*IQR))
# Comparación
length(outliers1$ingreso)
length(boxplot.stats(dataset$ingreso)$out)
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000))
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
xlab  = "Ingreso laboral")
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
x.lab  = "Ingreso laboral")
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
lab.x  = "Ingreso laboral")
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
x = "Ingreso laboral")
??ploy
??plot
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
ylab  = "Ingreso laboral")
# Identificación de los outliers en la gráfica
x <- plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
ylab  = "Ingreso laboral")
# Identificación de los outliers en la gráfica
x <- plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
ylab  = "Ingreso laboral")
saveRDS(x,
"C:/Users/Portatil/Desktop/FIGURAS_M2/plot_IQR.rds")
# Definición de función para estandarizar
f_z <- function(x){
z <- (x-mean(x, na.rm = T))/sd(x, na.rm = T)
return(z)
}
# Definición del data frame con la variable estandarizada
z <- data.frame(id = seq(1, nrow(dataset), by = 1),
x = dataset$ingreso,
z = f_z(dataset$ingreso))
# Seguimos el criterio según el cual z > 4, en muestras grandes,
# es considerado un valor atípico
outliers1 <- z  %>% filter(abs(z) > 2.5)
outliers2 <- z  %>% filter(abs(z) > 4)
y <- plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$x, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$x, 17, 1))
z <- plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers2$x, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers2$x, 17, 1))
y
y
quantile_f <- function(x){
q1 <- quantile(x, na.rm = T, 0.25)
q2 <- quantile(x, na.rm = T, 0.5)
q3 <- quantile(x, na.rm = T, 0.75)
y <- paste0(round(as.numeric(q2), 1), " (",
round(as.numeric(q1), 2), " - ",
round(as.numeric(q3), 2), ")")
return(y)
}
total <- dataset %>% dplyr::select(ingreso,
edad, horas_semana,
t_actual, t_viaje) %>%
dplyr::summarise(across(everything(),
~ quantile_f(.x)))
q_total <- data.frame(area = "Total",
ingreso2_sum = total$ingreso,
edad_sum = total$edad,
horas_semana_sum = total$horas_semana,
t_actual_sum = total$t_actual,
t_viaje_sum = total$t_viaje)
# Resumen descriptivo por grupos
q_group <- dataset %>%
dplyr::group_by(area) %>%
dplyr::summarise(across(c("ingreso",
"edad", "horas_semana",
"t_actual", "t_viaje"),
list(sum = quantile_f))) %>% as.data.frame()
cont_summary <- rbind(q_total, q_group)
quantile_f <- function(x){
q1 <- quantile(x, na.rm = T, 0.25)
q2 <- quantile(x, na.rm = T, 0.5)
q3 <- quantile(x, na.rm = T, 0.75)
y <- paste0(round(as.numeric(q2), 1), " (",
round(as.numeric(q1), 2), " - ",
round(as.numeric(q3), 2), ")")
return(y)
}
q_total
q_group
# El mismo resultado se puede obtener manualmente
Q1 <- quantile(dataset$ingreso, .25, na.rm = T)    # Cálculo de q0.25
Q3 <- quantile(dataset$ingreso, .75, na.rm = T)    # Cálculo de q0.75
IQR <- IQR(dataset$ingreso, na.rm = T)             # Cálculo del IQR (Q3-Q1)
outliers1 <- dataset %>% filter(ingreso<(Q1 - 1.5*IQR) | ingreso>(Q3 + 1.5*IQR))
# Comparación
length(outliers1$ingreso)
length(boxplot.stats(dataset$ingreso)$out)
# Identificación de los outliers en la gráfica
plot(dataset$ingreso, type='p',
col=ifelse(dataset$ingreso %in% outliers1$ingreso, "red", "black"),
pch = ifelse(dataset$ingreso %in% outliers1$ingreso, 17, 1),
ylim = c(-5000000, 10000000),
ylab  = "Ingreso laboral")
# Una práctica común sugiere que, cuando la interpretación de la variable
# no está enteramente sujeta a la escala, una transformación puede
# funcionar para suavizar la influencia de outliers
# Outliers para log(x)
z <- data.frame(x = log(dataset$ingreso),
z = f_z(log(dataset$ingreso)))
# Seguimos el criterio según el cual z > 4, en muestras grandes,
# es considerado un valor atípico
outliers3 <- z  %>% filter(abs(z) > 3)
plot(log(dataset$ingreso), type='p',
col=ifelse(log(dataset$ingreso) %in% outliers3$x, "red", "black"),
pch = ifelse(log(dataset$ingreso) %in% outliers3$x, 17, 1))
abline(h = min(outliers3$x), col="blue", lwd=3, lty=2)
outliers3
# Considérese la transformación logarítmica
dataset$log_ingreso <- log(dataset$ingreso)
dataset_no <- dataset %>% filter(!log_ingreso %in% outliers3$x)
# Comparación entre ambas distribuciones
StatDA::edaplot(dataset$log_ingreso, scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(12,20, by = 0.1),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(12, 20), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram,
Density Plot, Scatterplot,
and Boxplot of Rate (outliers)",
P.xlab="Log Ingreso laboral", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
